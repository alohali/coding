{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"do",
				"dot_cnt"
			],
			[
				"in",
				"Interval"
			],
			[
				"pu",
				"push_back"
			],
			[
				"ins",
				"intervals"
			],
			[
				"int",
				"intervals"
			],
			[
				"ne",
				"need1〔variable〕"
			],
			[
				"max",
				"maxleft〔variable〕"
			],
			[
				"ret",
				"return〔keyword〕"
			],
			[
				"id",
				"idxs〔argument〕"
			],
			[
				"s",
				"self"
			],
			[
				"nus",
				"nums2〔argument〕"
			],
			[
				"nu",
				"nums1〔argument〕"
			],
			[
				"nums",
				"nums1〔argument〕"
			],
			[
				"num",
				"nums2〔argument〕"
			],
			[
				"la",
				"last_valid〔variable〕"
			],
			[
				"len",
				"len0〔variable〕"
			],
			[
				"las",
				"last_len〔variable〕"
			],
			[
				"ob",
				"obstacleGrid〔argument〕"
			],
			[
				"pa",
				"path〔variable〕"
			],
			[
				"re",
				"return〔keyword〕"
			],
			[
				"le",
				"left〔argument〕"
			],
			[
				"r",
				"right"
			],
			[
				"mi",
				"mid"
			],
			[
				"m",
				"mid"
			],
			[
				"lef",
				"left2x"
			],
			[
				"ri",
				"right〔argument〕"
			],
			[
				"rig",
				"right_temp〔variable〕"
			],
			[
				"left",
				"left_temp"
			],
			[
				"righ",
				"right_temp"
			],
			[
				"bo",
				"bot〔variable〕"
			],
			[
				"no",
				"node_len"
			],
			[
				"wor",
				"wordDict〔argument〕"
			],
			[
				"wo",
				"wordDict〔argument〕"
			],
			[
				"f",
				"float"
			],
			[
				"po",
				"pow_helper〔function〕"
			],
			[
				"n",
				"num"
			],
			[
				"fi",
				"finally〔keyword〕"
			],
			[
				"st",
				"start_idx〔argument〕"
			],
			[
				"ca",
				"candidates〔argument〕"
			],
			[
				"find",
				"find_num"
			],
			[
				"en",
				"endWord"
			],
			[
				"fin",
				"find_end"
			],
			[
				"nex",
				"next_layer"
			],
			[
				"data",
				"datasize"
			],
			[
				"da",
				"datasize"
			],
			[
				"top",
				"topo_method"
			],
			[
				"imp",
				"import〔keyword〕"
			],
			[
				"im",
				"import〔keyword〕"
			],
			[
				"net",
				"network"
			],
			[
				"T",
				"Type"
			],
			[
				"lay",
				"layer_cnt"
			],
			[
				"ol",
				"old_layer"
			],
			[
				"__ge",
				"__get_layer_by_name"
			],
			[
				"pre",
				"pre"
			],
			[
				"sp",
				"split_layers_cnt〔variable〕"
			],
			[
				"__recomb",
				"__recombie_last_layer"
			],
			[
				"ma",
				"max_split_layers〔variable〕"
			],
			[
				"split_layers_cnt",
				"split_layers_cnt>6"
			],
			[
				"suc",
				"suc_all〔variable〕"
			],
			[
				"modu",
				"module_size"
			],
			[
				"mo",
				"module_size"
			],
			[
				"real",
				"real_layer〔variable〕"
			],
			[
				"ro",
				"root_idx〔variable〕"
			],
			[
				"idx",
				"idx_temp"
			],
			[
				"layer",
				"layer_map"
			],
			[
				"sor",
				"sort_net"
			],
			[
				"mod",
				"module_root〔argument〕"
			],
			[
				"module",
				"module_size"
			],
			[
				"lis",
				"list0〔variable〕"
			],
			[
				"V",
				"ValueError〔class〕"
			],
			[
				"__get",
				"__get_layer_by_idx〔function〕"
			],
			[
				"su",
				"suc"
			],
			[
				"poo",
				"pool_proj"
			],
			[
				"conv3",
				"conv3x3"
			],
			[
				"conv1",
				"conv1x1"
			],
			[
				"pool",
				"pool_output"
			],
			[
				"hal",
				"halo_last〔argument〕"
			],
			[
				"nor",
				"norm1"
			],
			[
				"cal",
				"calc_halo"
			],
			[
				"implem",
				"implemented"
			],
			[
				"spl",
				"split_layers_cnt"
			],
			[
				"print",
				"print_result"
			],
			[
				"spli",
				"split"
			],
			[
				"so",
				"sorted_layers〔variable〕"
			],
			[
				"lam",
				"layer_map"
			],
			[
				"em",
				"empty〔function〕"
			],
			[
				"se",
				"self〔argument〕"
			],
			[
				"cla",
				"class〔keyword〕"
			],
			[
				"con",
				"conv1"
			],
			[
				"ty",
				"type=Type.DATA"
			],
			[
				"df",
				"dfs_toposort"
			],
			[
				"v",
				"ValueError〔class〕"
			],
			[
				"mem",
				"memory_footprint"
			],
			[
				"split",
				"split_layers_cnt"
			],
			[
				"me",
				"memory_footprint"
			],
			[
				"el",
				"ele〔argument〕"
			],
			[
				"di",
				"digits〔argument〕"
			],
			[
				"c",
				"cnt"
			],
			[
				"ch",
				"change_pos〔argument〕"
			],
			[
				"e",
				"ele"
			],
			[
				"l",
				"left"
			],
			[
				"ge",
				"generateParenthesis"
			],
			[
				"dat",
				"data2"
			],
			[
				"ar",
				"array"
			],
			[
				"wei",
				"weight_size"
			],
			[
				"nei",
				"neigh"
			],
			[
				"pus",
				"push"
			],
			[
				"ed",
				"edges"
			],
			[
				"edg",
				"edge"
			],
			[
				"un",
				"unordered_map"
			],
			[
				"uno",
				"unionSet"
			],
			[
				"new",
				"newNode"
			],
			[
				"lab",
				"labelSet"
			],
			[
				"und",
				"UndirectedGraphNode"
			],
			[
				"ve",
				"vector"
			],
			[
				"de",
				"degrees"
			],
			[
				"deg",
				"degree"
			],
			[
				"pr",
				"prerequisites"
			],
			[
				"pad",
				"padw"
			],
			[
				"u",
				"uv"
			],
			[
				"out",
				"OutputCpu"
			],
			[
				"h",
				"h_src"
			],
			[
				"size",
				"sizeof"
			],
			[
				"tes",
				"TEST"
			],
			[
				"filt",
				"filterStrideA"
			],
			[
				"convl",
				"convLayer"
			],
			[
				"set",
				"LayerSetUp"
			],
			[
				"siz",
				"sizeof"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Y/learning/pytorch/tutorial/113.cpp",
			"settings":
			{
				"buffer_size": 824,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/CUDA C++/cuda-c++.sublime-build",
					""
				],
				[
					"Packages/CUDA C++/cuda-c++.sublime-build",
					"Run"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 185.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"c++",
				"Set Syntax: C++"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 626.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/cygwin/home/alohal/coding"
	],
	"file_history":
	[
		"/C/cygwin/home/alohal/coding/practice/71.cpp",
		"/C/cygwin/home/alohal/coding/practice/109.cpp",
		"/C/cygwin/home/alohal/coding/practice/75.cpp",
		"/C/cygwin/home/alohal/coding/practice/57.cpp",
		"/C/cygwin/home/alohal/coding/practice/174.py",
		"/C/cygwin/home/alohal/coding/practice/140.py",
		"/C/cygwin/home/alohal/coding/practice/60.cpp",
		"/C/cygwin/home/alohal/coding/practice/91.py",
		"/C/cygwin/home/alohal/coding/practice/115.cpp",
		"/C/cygwin/home/alohal/coding/practice/maxBag.py",
		"/C/cygwin/home/alohal/coding/practice/32.py",
		"/C/cygwin/home/alohal/coding/practice/18.py",
		"/C/cygwin/home/alohal/coding/practice/test.py",
		"/C/cygwin/home/alohal/coding/practice/4.py",
		"/C/cygwin/home/alohal/coding/practice/63.py",
		"/C/cygwin/home/alohal/coding/practice/90.py",
		"/C/cygwin/home/alohal/coding/practice/49.py",
		"/C/cygwin/home/alohal/coding/practice/148.py",
		"/C/cygwin/home/alohal/coding/practice/143.py",
		"/C/cygwin/home/alohal/coding/practice/179.py",
		"/C/cygwin/home/alohal/coding/practice/98.py",
		"/C/cygwin/home/alohal/coding/practice/138.cpp",
		"/Y/cudaopt/test/143.py",
		"/Y/cudaopt/test/450.py",
		"/C/cygwin/home/alohal/coding/practice/96.py",
		"/C/cygwin/home/alohal/coding/practice/42.py",
		"/C/cygwin/home/alohal/coding/practice/11.py",
		"/C/cygwin/home/alohal/coding/practice/85.py",
		"/C/cygwin/home/alohal/coding/practice/139.py",
		"/C/cygwin/home/alohal/coding/practice/60.py",
		"/C/cygwin/home/alohal/coding/practice/52.py",
		"/C/cygwin/home/alohal/coding/practice/50.py",
		"/C/cygwin/home/alohal/coding/pyLearn/test.py",
		"/C/cygwin/home/alohal/coding/practice/216.py",
		"/C/cygwin/home/alohal/coding/practice/131.py",
		"/C/cygwin/home/alohal/coding/pyLearn/network.py",
		"/C/cygwin/home/alohal/coding/pyLearn/cnnlayer.py",
		"/C/cygwin/home/alohal/coding/pyLearn/splitmodel.py",
		"/C/cygwin/home/alohal/coding/practice/126.py",
		"/C/cygwin/home/alohal/coding/practice/39.py",
		"/C/cygwin/home/alohal/coding/practice/40.py",
		"/C/cygwin/home/alohal/coding/practice/test.cpp",
		"/C/cygwin/home/alohal/coding/practice/22.py",
		"/C/cygwin/home/alohal/coding/practice/93.py",
		"/C/cygwin/home/alohal/coding/practice/17.py",
		"/C/cygwin/home/alohal/coding/pyLearn/model.py",
		"/C/cygwin/home/alohal/coding/practice/385.py",
		"/C/cygwin/home/alohal/coding/practice/43.py",
		"/C/cygwin/home/alohal/coding/practice/383.py",
		"/C/cygwin/home/alohal/coding/practice/310.cpp",
		"/C/cygwin/home/alohal/coding/practice/128.cpp",
		"/C/cygwin/home/alohal/coding/subLime/coding.sublime-project",
		"/C/Users/alohal/Desktop/temp200.cpp",
		"/C/Users/alohal/Desktop/temp.cpp",
		"/Y/coding/practice/133.cpp",
		"/Y/coding/practice/207.cpp",
		"/Y/coding/207/code.c",
		"/Y/coding/210/code.c",
		"/Y/cudaopt/include/gpuFunc.hxx",
		"/Y/cudaopt/cudnnTest/main.cu",
		"/Y/cudaopt/pooling/pooling.cu",
		"/Y/cudaopt/pooling/makefile",
		"/Y/cudaopt/test/haloCalc.c",
		"/Y/cudaopt/include/util.h",
		"/Y/cudaopt/pooling/main.cu",
		"/Y/cudaopt/biascopy/biascopy.cu",
		"/Y/cudaopt/include/cpuFunc.hxx",
		"/Y/cudaopt/cudnnTest/net.hxx",
		"/Y/cudaopt/cudnnTest/makefile",
		"/Y/cudaopt/usefulCode/implicit gemm/conv2d_experimental_sgemm.cu",
		"/Y/cudaopt/test/powf.sass",
		"/Y/cudaopt/cudnnTest/test.cu",
		"/Y/cudaopt/cudnnTest/layers.hxx",
		"/Y/cudaopt/implicitGEMM/imGemm.cu",
		"/Y/cudaopt/cudnnTest/44.txt",
		"/Y/cudaopt/cudnnTest/aa.txt",
		"/Y/cudaopt/cudnnTest/66.txt",
		"/Y/cudaopt/cudnnTest/77.txt",
		"/Y/cudaopt/cudnnTest/55.txt",
		"/Y/cudaopt/cudnnTest/splitnet.cu",
		"/Y/cudaopt/cudnnTest/1.txt",
		"/Y/cudaopt/cudnnTest/3.txt",
		"/Y/cudaopt/cudnnTest/2.txt",
		"/Y/cudaopt/cudnnTest/4.txt",
		"/Y/cudaopt/cudnnTest/1.csv",
		"/Y/cudaopt/cudnnTest/a.csv",
		"/Y/cudaopt/cudnnTest/all.csv",
		"/Y/cudaopt/cudnnTest/all2.csv",
		"/Y/cudaopt/cudnnTest/all3.csv",
		"/Y/cudaopt/cudnnTest/12.csv",
		"/Y/cudaopt/cudnnTest/123.csv",
		"/Y/cudaopt/split.txt",
		"/Y/cudaopt/cudnnTest/cudnn.h",
		"/Y/cudaopt/script/autorun.py",
		"/Y/cudaopt/biggemm/biggemm.cu",
		"/Y/cudaopt/test/lrn.sass",
		"/Y/cudaopt/test/test.cu",
		"/Y/cudaopt/script/parsecsv.py",
		"/Y/cudaopt/pooling/util.h",
		"/Y/cudaopt/implicitGEMM/imGemm.sass",
		"/Y/cudaopt/implicitGEMM/imGemmGeneral.cu",
		"/Y/cudaopt/implicitGEMM/imGemm.hxx",
		"/Y/cudaopt/cudnnTest/lenet.cu",
		"/Y/cudaopt/implicitGEMM/makefile",
		"/Y/cudaopt/implicitGEMM/cpuFunc.hxx",
		"/Y/cudaopt/cudnnTest/cpuFunc.hxx",
		"/Y/cudaopt/script/driveNetNVPDM.txt",
		"/Y/cudaopt/script/NVHelNetNVPDM.txt",
		"/Y/cudaopt/usefulCode/cudnn-training-master/lenet.cu",
		"/Y/cudaopt/cudnnTest/util.h",
		"/Y/cudaopt/cudnnTest/layers.cu",
		"/Y/cudaopt/usefulCode/cudnn-training-master/makefile",
		"/Y/cudaopt/usefulCode/cudnn-training-master/splitnet.cu",
		"/Y/cudaopt/pooling/cpuFunc.hxx",
		"/Y/cudaopt/pooling/pool.cu",
		"/Y/cudaopt/script/gietest.py",
		"/Y/cudaopt/usefulCode/cudnn-training-master/softmax.cu",
		"/Y/cudaopt/usefulCode/cudnn-training-master/readubyte.cpp",
		"/Y/dittree/sw/gpgpu/MachineLearning/DIT/trunk/build-cuda-8.0/drivepx2/winograd/release/fp32im.sass",
		"/Y/dittree/sw/gpgpu/MachineLearning/DIT/trunk/build-cuda-8.0/drivepx2/winograd/release/fp16im.sass",
		"//shcompute-4/alohal-scratch/cudaopt/implicitGEMM/imGemmKernel.hxx",
		"//shcompute-4/alohal-scratch/cudaopt/implicitGEMM/cpuFunc.hxx",
		"//shcompute-4/alohal-scratch/cudaopt/implicitGEMM/a.sass",
		"//shcompute-4/alohal-scratch/cudaopt/implicitGEMM/4.sass",
		"//shcompute-4/alohal-scratch/cudaopt/usefulCode/implicit gemm/conv2d_experimental_gemm.hxx",
		"//shcompute-4/alohal-scratch/cudaopt/usefulCode/implicit gemm/conv2d_experimental_sgemm.cu",
		"//shcompute-4/alohal-scratch/cudaopt/implicitGEMM/1.sass",
		"/Y/dittree/sw/gpgpu/MachineLearning/cudnn/src/conv2d_implicit_sgemm_kernel.hxx"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 117.0,
		"where_history":
		[
			"*.cpp,*.h,*.cu,*.hpp,*.hxx",
			"*.cpp,*.h,*.cu,*.hpp",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\trunk",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\trunk",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT",
			"*.cpp,*.h,*.cu,*.hpp",
			"*.cpp,*.h,*.cu",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\",
			"*.cpp,*.h,*.cu",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\externals",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\",
			"*.cpp,*.h,*.cu",
			"*.cpp,*.h",
			"C:\\Users\\alohal\\alohal_ALOHAL-LT_5316\\alohal_ALOHAL-LT_5316\\sw\\gpgpu\\MachineLearning\\DIT\\",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"root.",
			"dp",
			"len(a2)",
			"len(a1)",
			"(\"()(())\")",
			"fast_sort",
			"Node",
			"8",
			"print",
			"max_split_layers",
			"max_halo_persent",
			"Glo",
			"GlobalParam",
			"layer.Type.",
			"layer.Type",
			"layer.L",
			"layer.",
			"layer.Layer",
			"layer.",
			"GlobalParam",
			"sort_net",
			"GlobalParam",
			"Layer",
			"Type",
			"type",
			"Type",
			"csv",
			"layer",
			"module_s",
			"chain",
			"DATA",
			"DAta",
			"__recombie_last_layer",
			">6",
			"get_layer_by_name",
			"get_layer_by_idx",
			"get_layer_by_name",
			"not implemented now",
			"__recombie_old_layer",
			"__split_cnt_calc",
			"max_split_layers",
			"check_module",
			"module_size",
			"print",
			"set()",
			"):\n",
			"split_layers_cnt",
			"dfs",
			"__update_halo",
			"data_size",
			"print_result",
			"split",
			"3",
			"calc_halo",
			"split",
			"%\n",
			"calc_halo",
			"__calc_divide",
			"__recombine",
			"split_net",
			"split",
			"__cacl_split",
			"__split_cnt_calc",
			"split",
			"halo_percent",
			"__calc_halo",
			"halo_percent",
			"__recombine",
			"halo_percent",
			"recombine",
			"__insert_layer",
			"insert_layer",
			"build_net",
			"stack0",
			"root",
			"\"\n",
			"suc",
			"Layers_",
			"Layers",
			"suc",
			"setParam",
			"setParm",
			"layers",
			"Layer",
			"pad:",
			"rsuv:",
			"suc:",
			"pre:",
			"nchwkpq:",
			"type:",
			"name:",
			"setParam",
			"kw",
			"SplitNet",
			"splitTest",
			"% ",
			"__split_cnt_calc",
			"__split_cnt_inc",
			"memory_footprint",
			"large",
			"split_layers_cnt",
			"halo_total",
			"9",
			"to",
			"print",
			"change",
			"table",
			"))]\n",
			"j",
			" ",
			"pos",
			"to_int",
			"__is_winograd",
			"__isWinograd",
			"memory_footprint",
			"if",
			"set",
			"UV",
			"compare",
			" *",
			"gemm",
			"gemmGPU",
			"* ",
			"twoshare1283",
			"testcopy",
			"batchsize",
			"copykernel",
			"copy_kernel_launcher"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"root->",
			"maxleft",
			"self.m",
			"self.n",
			"__quick_sort",
			"node",
			"cnnlayer.Type.",
			"cnnlayer.Type",
			"cnnlayer.",
			"layer.Type",
			"insert_layer",
			"__insert_layer",
			"list0",
			"Layers_",
			"'pad':",
			"'rsuv':",
			"'suc':",
			"'pre':",
			"'nchwkpq':",
			"'type':",
			"'name':",
			"kwargs",
			"__split_cnt_calc",
			"is_winograd",
			"__is_winograd",
			"map",
			"pool",
			"fp16",
			"splitMode_",
			"ConvNum_",
			"ForwardCPU",
			"forwardCPU",
			"getMem()",
			"getBuf()",
			"part",
			"PARTS",
			"compareOnePart",
			"parent->",
			"layer->",
			"ctx_.",
			"buf",
			"ctx_",
			"ctx0->getHandle()",
			"->",
			"conv2",
			"conv1",
			"conv0",
			"Params",
			"getOutputdim",
			"Params",
			"]->",
			"poolP0->",
			"convP[0]->",
			"dataP0->",
			"LOG",
			"convP[2]",
			"convP[1]",
			"convP[0]",
			"filterDim",
			"dataDim",
			"conv1",
			"dtype",
			"convP1",
			"dataP0",
			"OutputGPU2",
			"dataP0",
			"workSize",
			"scratchSize",
			"float",
			"fp16",
			"float",
			"fp16",
			"LayerSetUp",
			"ASSERT",
			"getBuf()",
			"getTensor()",
			"ResultDim",
			"OutputGPU_2",
			"OutputGPU",
			"copy2GPU",
			"cudnnLayer<dtype>",
			"cudnnLayer<float>",
			"FORWARDCPU",
			"Region",
			"Regions",
			"Region",
			"getHandle()",
			"MemSize()",
			"GpuData()",
			"Blob",
			"B",
			"Blob",
			"batch",
			"out_",
			"mem1",
			"mem0",
			"conv0->",
			"ctx0->",
			"cudnnLayer",
			"convalgo",
			"convDesc",
			"filterDesc",
			"dstTensor",
			"srcTensor",
			"cudnnTensorDescriptor_t",
			"testCudnn",
			"dstdim",
			"srcdim",
			"src",
			"tW",
			"tH",
			"tS",
			"tR",
			"tV",
			"tU",
			"tQ",
			"tP",
			"tV",
			"tU",
			"tQ",
			"tP",
			"INPUT_PER_THREAD",
			"LDG_PER_THREAD",
			"BSmemWidth",
			"32",
			"blockIdx.x",
			"CRS",
			"7"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Y/learning/pytorch/tutorial/113.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 824,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								824
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 215.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "coding.sublime-project",
	"replace":
	{
		"height": 80.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 224.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
